@using AmerFamilyPlayoffs.Data;
@using PlayoffPool.MVC.Extensions;
@using PlayoffPool.MVC.Models.Home;
@{
    ViewData["Title"] = "Home Page";
    Layout = "_AuthenticatedLayout";
}

@model HomeViewModel

@if (this.Model.CompletedBrackets.Any() == false && this.Model.IncompleteBrackets.Any() == false && false)
{
    <p>It looks like you haven't made any picks.</p>
    <div class="container">
        @*<div class="pp-child-center">
            <a class="btn btn-primary pp-button pp-button-create-first-bracket" href="/Bracket/Create">Create your first bracket</a>
        </div>*@
    </div>
}
else
{
    <div class="container">
        @if (this.Model.IncompleteBrackets.Any())
        {
            <div class="row pp-my-brackets pp-my-incomplete-brackets">
                <h4 class="col">Incomplete Brackets</h4>
            </div>
            @foreach (var bracket in this.Model.IncompleteBrackets)
            {
                <div class="row pp-bracket-summary">
                    <span class="col">
                        <label class="pp-label">Bracket Name</label>
                        <span class="pp-label-value">@bracket.Name</span>
                    </span>
                    <span class="col-auto">
                        <span><a class="btn pp-button pp-button-secondary" href=@string.Format("/Bracket/Update/{0}", bracket.Id)>Continue Bracket</a></span>
                    </span>
                </div>
            }
        }

        <div class="row pp-my-brackets pp-my-complete-brackets">
            <h4 class="col">Completed Brackets</h4>
            @*<span class="col-auto">
                <a class="btn pp-button" href="/Bracket/Create">Create Another Bracket</a>
            </span>*@
        </div>
        @foreach (var bracket in this.Model.CompletedBrackets)
        {
            <div class="row pp-bracket-summary">
                <span class="col">
                    <label class="pp-label">Bracket Name</label>
                    <span class="pp-label-value">@bracket.Name</span>
                </span>
                <span class="col">
                    <label class="pp-label">Predicted Winner</label>
                    <span class="pp-label-value">@bracket.PredictedWinner.Name</span>
                </span>
                <span class="col-auto">
                    <span><a class="btn pp-button pp-button-secondary" href=@string.Format("/Bracket/Update/{0}", bracket.Id)>Update Bracket</a></span>
                </span>
            </div>
        }

        @if (this.Model.Leaderboard != null)
        {
            <div class="row pp-leaderboard">
                <h4 class="col">Leaderboard</h4>
                @foreach (var bracket in this.Model.Leaderboard.Brackets)
                {
                    <div class="row pp-bracket-summary">
                        <span class="col">
                            <label class="pp-label">Current Place</label>
                            <span class="pp-label-value">@bracket.Place</span>
                        </span>
                        <span class="col">
                            <label class="pp-label">Bracket Name</label>
                            <span class="pp-label-value">@bracket.Name</span>
                        </span>
                        <span class="col">
                            <label class="pp-label">Predicted Winner</label>
                            <span class="pp-label-value">@bracket.PredictedWinner.Name</span>
                        </span>
                        <span class="col">
                            <label class="pp-label">Score</label>
                            <span class="pp-label-value">@bracket.CurrentScore</span>
                        </span>
                        <span class="col-auto">
                            <span><a class="btn pp-button pp-button-secondary" href=@string.Format("/Bracket/Update/{0}", bracket.Id)>View</a></span>
                        </span>
                    </div>
                }
            </div>
        }
    </div>
}